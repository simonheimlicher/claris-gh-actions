name: Deploy to Cloudflare Pages

on:
  workflow_call:
    inputs:
      # The base URL on the custom domain of your Cloudflare Pages project
      BASE_URL:
        required: true
        type: string
      # The canonical base URL (only has an effect if it differs from the base URL)
      CANONICAL_BASE_URL:
        required: false
        type: string
      CLOUDFLARE_PROJECT_NAME:
        required: true
        type: string
    secrets:
      # Cloudflare Zone ID is required for manual cache purging
      CLOUDFLARE_ZONE_ID:
        required: true
      CLOUDFLARE_API_TOKEN:
        required: true
      CLOUDFLARE_ACCOUNT_ID:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    env:
      # Define the branch name variable
      BRANCH_NAME: ${{ github.ref_name }}
      ARTIFACT_PATH: public
      BASE_URL: ${{ inputs.BASE_URL }}
      CANONICAL_BASE_URL: ${{ inputs.CANONICAL_BASE_URL }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          # Name of the artifact to download.
          # If unspecified, all artifacts for the run are downloaded.
          # Optional.
          name: ${{ env.ARTIFACT_PATH }}-${{ env.BRANCH_NAME }}
          # Destination path. Supports basic tilde expansion.
          path: ${{ env.ARTIFACT_PATH }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Get account ID: Log in to the Cloudflare dashboard, select your zone in Account Home
          # and find your account ID in Overview under API on the right-side menu.
          # If you do not have a zone registered to your account, you can also get your account
          # ID from the pages.dev URL. E.g: https://dash.cloudflare.com/<ACCOUNT_ID>/pages
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Get project ID: Log in to the Cloudflare dashboard and select "Workers & Pages" in the
          # left-hand navigation. The slug being shown for every project is also the project name.
          # You can change it by going to the "Settings" tab of the Pages project
          projectName: ${{ inputs.CLOUDFLARE_PROJECT_NAME }}
          directory: ${{ env.ARTIFACT_PATH }}
          # Use the newly released Wrangler v3 with the wranglerVersion property
          wranglerVersion: '3'

      # Restore previously cached URL hash manifest to detect changes
      - name: Restore previous manifest
        id: restore-manifest
        uses: actions/cache/restore@v3
        with:
          path: previous-hash-manifest.txt
          key: manifest-${{ env.BRANCH_NAME }}

      # Purge modified files from Cloudflare using Python script
      - name: Checkout claris-gh-actions repository
        uses: actions/checkout@v4
        with:
          repository: simonheimlicher/claris-gh-actions
          path: claris-gh-actions
  
      - name: Purge modified files from Cloudflare
        run: |
          # Use canonical base URL if provided, else fall back to base URL
          EFFECTIVE_BASE_URL="${{ env.CANONICAL_BASE_URL || env.BASE_URL }}"

          echo "üìÇ ARTIFACT_PATH: $ARTIFACT_PATH"
          echo "üåç BASE_URL: $BASE_URL"
          echo "üåê CANONICAL_BASE_URL: $CANONICAL_BASE_URL"
          echo "üîó Using effective base URL: $EFFECTIVE_BASE_URL"

          python3 claris-gh-actions/cloudflare/purge-modified.py \
            --public-dir "${{ env.ARTIFACT_PATH }}" \
            --base-url "${{ env.CANONICAL_BASE_URL }}" \
            --zone-id "${{ secrets.CLOUDFLARE_ZONE_ID }}" \
            --api-token "${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            --prev-manifest previous-hash-manifest.txt \
            --save-manifest public-hash-manifest.txt \
            --batch-size 30

      # Save current hash manifest to cache for the next deploy
      - name: Cache current manifest for future deploy
        uses: actions/cache/save@v3
        with:
          path: public-hash-manifest.txt
          key: manifest-${{ env.BRANCH_NAME }}